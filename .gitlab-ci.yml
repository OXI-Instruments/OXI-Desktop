# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

docker-build:
    # Use the official docker image.
    image: docker:19.03.12
    stage: build
    services:
        - docker:19.03.12-dind
    before_script:
        -    docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    # Default branch leaves tag empty (= latest tag)
    # All other branches are tagged with the escaped branch name (commit ref slug)
    script:
        - tag=":$CI_COMMIT_TAG"  
        - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" -f docker/ubuntu/Dockerfile .
        - docker push "$CI_REGISTRY_IMAGE${tag}"
    rules:
        - if: '$CI_COMMIT_TAG =~ /^docker-\d+\.\d+\.\d+$/'

build_and_test:
    image: $CI_REGISTRY_IMAGE:docker-1.0.0
    stage: build
    variables:
      GIT_SUBMODULE_STRATEGY: recursive

    script:
        - cd /builds/manuwind5/Oxi-Desktop-App
        - cmake -DCMAKE_BUILD_TYPE=Release .
        - make
        # until we have no deployable artifact to run tests on we just test here
        - ./tests/unittests/oxi_unittests --gtest_filter=unit* --gtest_output=xml:test_report.xml
    artifacts:
        when: always
        reports:
            junit: /builds/**/test_report.xml
